name: DeployToPages

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    name: WebGLBuild
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
          tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
          android: true
          dotnet: false
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
    
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-WebGL-${{ hashFiles('Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-WebGL-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL

      - name: Upload WebGL Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Prismyck-WebGL-${{ github.sha }}
          path: build/WebGL/WebGL
          retention-days: 3

      - name: Upload Build to GitHub Pages
        id: upload
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/WebGL/WebGL

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  winbuild:
    name: WindowsBuild
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: windows-2022
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache
      - name: Restore Cache
        uses: actions/cache/restore@v4
        id: cache-restore
        with:
          path: |
            Library
            build/StandaloneWindows64/StandaloneWindows64_BackUpThisFolder_ButDontShipItWithYourGame
          key: Library-Win64

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows64
          dockerMemoryLimit: 15g

      - name: Save Cache
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            Library
            build/StandaloneWindows64/StandaloneWindows64_BackUpThisFolder_ButDontShipItWithYourGame
          key: ${{ steps.cache-retore.outputs.cache-primary-key }}

      - name: Cleanup Artifact
        shell: pwsh
        run: |
          rm -Recurse build/StandaloneWindows64/Prismyck_BurstDebugInformation_DoNotShip
          rm -Recurse build/StandaloneWindows64/StandaloneWindows64_BackUpThisFolder_ButDontShipItWithYourGame

      - name: Upload Windows Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Prismyck-Windows-${{ github.sha }}
          path: build/StandaloneWindows64
          retention-days: 3
